= Bento
Bento is a Rails account management engine.

== Disclaimer
Don't expect everything to work exactly as described below. The gem is still in early beta.

== Installation
 gem install bundler
 add gem 'bento' to your Gemfile
 bundle install
 rails generate bento:install
 rails generate bento account
 rake db:migrate

== Model
If you run:
  rails generate bento account
your Account model will call bento_account which will load account functionality into our model.
If your model isn't named Account you need to override the model bento uses in the generated initializer.

== Routes
Bento sets up the following routes that you can use, complete with views and controllers:
* [GET] sign_up_accounts - account and user creation in once
* [GET] new_accounts - for just account creation
* [GET] accounts - show
* [GET] account - index
* [POST] accounts - create
* [PUT] account - update
* [DELETE] account - destroy

== Views and controllers
=== Access the current account:
There is a current_<account model name> (i.e. current_account) helper in your controllers and views which returns the currently logged in user's account.

=== Automatic scoping
You can tell your controllers to scope your resource to the current account.
  class MyController < ApplicationController
    scoped_to_account
  end

=== Admin managed account
Bento can give you a complete CRUD for creating accounts. To customize the views use
  rails generate bento:views
If your current_user respond to admin? These actions will only be accessible by users that respond with true.

== Configuring controllers

You can customize the accounts controller by following these steps:

1) Create your custom accounts controller:
    class AccountsController < Bento::AccountsController
    end

2) Tell the router to use this controller:
    resources :accounts

3) And since we changed the controller, it won't use the gem's views so make sure to make some and put in app/views/accounts.
  rails generate bento:views

=== Override specific pieces
The default behavior is to redirect to the accounts show view after creation.
This can be changed by overriding the after_create_url method:
  class CustomAccountsController < Bento::AccountsController
    protected
    def after_create_url
      custom_account_path(resource)
    end
  end

== Credits and contributors

* The contributors of the awesome Devise gem from which I've borrowed a lot of ideas and patterns.
* Elabs for sponsoring
* Jonas Nicklas for helping me boot strap the engine.
* All the gems that this gem depends on.
